{"version":3,"sources":["components/previewCollection/collectionPreview.js","components/collectionsOverview/collectionsOverview.js","components/collectionsOverview/collectionsOverviewContainer.js","redux/shop/shopSelector.js","components/collectionItem/CollectionItem.js"],"names":["CollectionPreview","title","items","className","toUpperCase","filter","item","idx","map","CollectionItem","id","mapStateToProps","createStructuredSelector","collections","selectCollectionsForPreview","connect","otherCollectionProps","isLoading","SelectIsCollectionFetching","CollectionsOverviewContainer","compose","WithSpinner","CollectionsOverview","selectShop","state","shop","selectCollections","createSelector","Object","keys","key","selectCollection","collectionUrlParam","isFetching","isCollectionLoaded","dispatch","addItem","name","price","imageUrl","style","backgroundImage","onClick","inverted"],"mappings":"iQAoBeA,EAdW,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAC/B,OACI,sBAAKC,UAAU,qBAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBF,EAAMG,gBAC7B,qBAAKD,UAAU,UAAf,SACKD,EAAMG,QAAQ,SAACC,EAAMC,GAAP,OAAeA,EAAM,KAC/BC,KAAK,SAACF,GAAD,OACF,cAACG,EAAA,EAAD,CAA8BH,KAAMA,GAAfA,EAAKI,aCM5CC,G,OAAkBC,YAAyB,CAC7CC,YAAaC,OAIFC,cAAQJ,EAARI,EAda,SAAC,GAAD,IAAGF,EAAH,EAAGA,YAAH,OACxB,qBAAKV,UAAU,uBAAf,SACKU,EAAYL,KAAI,gBAAGE,EAAH,EAAGA,GAAOM,EAAV,6BACb,cAAC,EAAD,eAAgCA,GAARN,WCN9BC,EAAkBC,YAAyB,CAC7CK,UAAWC,MAGTC,EAA+BC,YACjCL,YAAQJ,GACRU,IAFiCD,CAGnCE,GAGaH,a,gCCjBf,oJAEMI,EAAa,SAAAC,GAAK,OAAIA,EAAMC,MAErBC,EAAoBC,YAC7B,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKZ,eAGJC,EAA8Ba,YACvC,CAACD,IACD,SAAAb,GAAW,OAAIA,EAAce,OAAOC,KAAKhB,GAAaL,KAAI,SAAAsB,GAAG,OAAIjB,EAAYiB,MAAQ,MAG5EC,EAAmB,SAAAC,GAAkB,OAC9CL,YACA,CAACD,IACD,SAAAb,GAAW,OAAIA,EAAcA,EAAYmB,GAAsB,SAGtDd,EAA6BS,YACtC,CAACJ,IACD,SAAAE,GAAI,OAAIA,EAAKQ,cAGJC,EAAqBP,YAC9B,CAACJ,IACD,SAAAE,GAAI,QAAMA,EAAKZ,gB,kFCMJE,gBACX,MALuB,SAAAoB,GAAQ,MAAK,CACpCC,QAAS,SAAA9B,GAAI,OAAI6B,EAASC,YAAQ9B,QAGvBS,EA1BQ,SAAC,GAAuB,IAArBT,EAAoB,EAApBA,KAAM8B,EAAc,EAAdA,QACpBC,EAA0B/B,EAA1B+B,KAAMC,EAAoBhC,EAApBgC,MAAOC,EAAajC,EAAbiC,SAErB,OACI,sBAAKpC,UAAU,kBAAf,UACI,qBACIA,UAAU,QACVqC,MAAO,CACHC,gBAAgB,OAAD,OAASF,EAAT,QAGvB,sBAAKpC,UAAU,oBAAf,UACI,sBAAMA,UAAU,OAAhB,SAAwBkC,IACxB,uBAAMlC,UAAU,QAAhB,cAA0BmC,QAE9B,cAAC,IAAD,CAAQI,QAAS,kBAAMN,EAAQ9B,IAAOqC,UAAQ,EAA9C,gC","file":"static/js/4.1ffd2f7a.chunk.js","sourcesContent":["import React from 'react'\n\nimport './collectionPreview.scss'\n\nimport CollectionItem from \"../collectionItem/CollectionItem\";\n\nconst CollectionPreview = ({title, items}) => {\n    return (\n        <div className=\"collection-preview\">\n            <h1 className=\"title\">{title.toUpperCase()}</h1>\n            <div className=\"preview\">\n                {items.filter( (item, idx) => idx < 4 )\n                    .map( (item) => (\n                        <CollectionItem key={item.id} item={item} />\n                    ))}\n            </div>\n        </div>\n    )\n}\n\nexport default CollectionPreview\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {createStructuredSelector} from \"reselect\";\n\nimport {selectCollectionsForPreview} from \"../../redux/shop/shopSelector\";\n\nimport CollectionPreview from \"../previewCollection/collectionPreview\";\n\nimport './collection.scss'\n\nconst CollectionsOverview = ({ collections }) => (\n    <div className='collections-overview'>\n        {collections.map(({ id, ...otherCollectionProps }) => (\n            <CollectionPreview key={id} {...otherCollectionProps} />\n        ))}\n    </div>\n);\n\n\nconst mapStateToProps = createStructuredSelector({\n    collections: selectCollectionsForPreview\n})\n\n\nexport default connect(mapStateToProps)(CollectionsOverview)\n","import {connect} from 'react-redux'\nimport {createStructuredSelector} from \"reselect\";\nimport {compose} from \"redux\";\nimport {SelectIsCollectionFetching} from \"../../redux/shop/shopSelector\";\nimport WithSpinner from \"../spinner/spinner\";\nimport CollectionsOverview from \"./collectionsOverview\";\n\nconst mapStateToProps = createStructuredSelector({\n    isLoading: SelectIsCollectionFetching\n})\n\nconst CollectionsOverviewContainer = compose(\n    connect(mapStateToProps),\n    WithSpinner,\n)(CollectionsOverview)\n\n\nexport default CollectionsOverviewContainer\n\n\n","import {createSelector} from \"reselect\";\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n);\n\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\n);\n\nexport const selectCollection = collectionUrlParam =>\n    createSelector(\n    [selectCollections],\n    collections => collections ? collections[collectionUrlParam] : null\n);\n\nexport const SelectIsCollectionFetching = createSelector (\n    [selectShop],\n    shop => shop.isFetching\n)\n\nexport const isCollectionLoaded = createSelector (\n    [selectShop],\n    shop => !!shop.collections\n)\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {addItem} from \"../../redux/cart/cartActions\";\n\nimport './collection-item.scss'\nimport Button from \"../button/button\";\n\nconst CollectionItem = ({ item, addItem }) => {\n    const { name, price, imageUrl } = item;\n\n    return (\n        <div className='collection-item'>\n            <div\n                className='image'\n                style={{\n                    backgroundImage: `url(${imageUrl})`\n                }}\n            />\n            <div className='collection-footer'>\n                <span className='name'>{name}</span>\n                <span className='price'>${price}</span>\n            </div>\n            <Button onClick={() => addItem(item)} inverted>\n                Add to cart\n            </Button>\n        </div>\n    );\n};\n\nconst mapDispatchToProps = dispatch => ({\n    addItem: item => dispatch(addItem(item))\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(CollectionItem);\n"],"sourceRoot":""}