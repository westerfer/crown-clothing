{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/formInput/formInput.js","components/signIn/signIn.js","components/signUp/signUp.js","pages/authpage/auth.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","handleChange","label","otherProps","className","onChange","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","isGoogleSignIn","SignUpStart","displayName","confirmPassword","setUserCredentials","alert","AuthPage"],"mappings":"0RAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,G,oBIevFC,G,OAhBG,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,MAAUC,EAAgB,wCACzD,OACI,sBAAKC,UAAU,QAAf,UACI,mCAAOA,UAAU,aAAaC,SAAUJ,GAAkBE,IACxDD,EACE,uBACIE,UAAS,UAAKD,EAAWR,MAAMC,OAAS,SAAW,GAA1C,qBADb,SAIKM,IAEL,U,gBC4BDI,G,OAAAA,YAAQ,MAJI,SAAAC,GAAQ,MAAK,CACpCC,kBAAmB,kBAAMD,EAASC,gBAClCC,iBAAkB,SAACC,EAAOC,GAAR,OAAqBJ,EAASE,YAAiB,CAACC,QAAOC,kBAE9DL,EAnCA,SAAC,GAA2C,IAA1CG,EAAyC,EAAzCA,iBAAkBD,EAAuB,EAAvBA,kBAAuB,IACZI,mBAAS,CAAEF,MAAM,GAAIC,SAAS,KADlB,GAC/CE,EAD+C,KAC9BC,EAD8B,KAE/CJ,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SAERI,EAAY,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sDACjBD,EAAME,iBACNT,EAAiBC,EAAOC,GAFP,2CAAH,sDAKZV,EAAe,SAAAe,GAAU,IAAD,EACFA,EAAMG,OAAtBxB,EADkB,EAClBA,MAAOyB,EADW,EACXA,KACfN,EAAe,2BAAID,GAAL,kBAAwBO,EAAOzB,MAGjD,OACI,sBAAKS,UAAU,UAAf,UACI,oBAAIA,UAAU,QAAd,uCACA,wEACA,uBAAMiB,SAAUN,EAAhB,UACI,cAAC,EAAD,CAAWK,KAAK,QAAQE,KAAK,QAAQ3B,MAAOe,EAAOT,aAAcA,EAAcC,MAAM,QAAQqB,UAAQ,IACrG,cAAC,EAAD,CAAWH,KAAK,WAAWE,KAAK,WAAW3B,MAAOgB,EAAUV,aAAcA,EAAcC,MAAM,WAAWqB,UAAQ,IAEjH,sBAAKnB,UAAU,UAAf,UACI,cAAC,IAAD,CAAQkB,KAAK,SAAb,qBACA,eAAC,IAAD,CAAQA,KAAK,SAASE,QAAShB,EAAmBiB,gBAAc,EAAhE,cAAmE,GAAnE,uBAA2F,mBC2BhGnB,G,OAAAA,YAAQ,MAHI,SAAAC,GAAQ,MAAK,CACpCmB,YAAa,SAAAb,GAAe,OAAIN,EAASmB,YAAYb,QAE1CP,EAlDA,SAAC,GAAmB,IAAlBoB,EAAiB,EAAjBA,YAAiB,IACgBd,mBAAS,CACnDe,YAAa,GACbjB,MAAO,GACPC,SAAU,GACViB,gBAAiB,KALS,GACvBf,EADuB,KACNgB,EADM,KAQvBF,EAAiDd,EAAjDc,YAAajB,EAAoCG,EAApCH,MAAOC,EAA6BE,EAA7BF,SAAUiB,EAAmBf,EAAnBe,gBAE/Bb,EAAY,uCAAG,WAAMC,GAAN,SAAAC,EAAA,yDACjBD,EAAME,iBAEHP,IAAaiB,EAHC,uBAIbE,MAAM,wBAJO,0BAQjBJ,EAAY,CAAEC,cAAajB,QAAOC,aARjB,2CAAH,sDAYZV,EAAe,SAAAe,GAAU,IAAD,EACFA,EAAMG,OAAtBC,EADkB,EAClBA,KAAMzB,EADY,EACZA,MAEdkC,EAAmB,2BAAIhB,GAAL,kBAAuBO,EAAOzB,MAGpD,OACI,sBAAKS,UAAU,UAAf,UACI,oBAAIA,UAAU,QAAd,sCACA,wEAEA,uBAAMA,UAAU,eAAeiB,SAAUN,EAAzC,UACI,cAAC,EAAD,CAAWO,KAAK,OAAOF,KAAK,cAAczB,MAAOgC,EAAa1B,aAAcA,EAAcC,MAAM,eAAeqB,UAAQ,IACvH,cAAC,EAAD,CAAWD,KAAK,QAAQF,KAAK,QAAQzB,MAAOe,EAAOT,aAAcA,EAAcC,MAAM,QAAQqB,UAAQ,IACrG,cAAC,EAAD,CAAWD,KAAK,WAAWF,KAAK,WAAWzB,MAAOgB,EAAUV,aAAcA,EAAcC,MAAM,WAAWqB,UAAQ,IACjH,cAAC,EAAD,CAAWD,KAAK,WAAWF,KAAK,kBAAkBzB,MAAOiC,EAAiB3B,aAAcA,EAAcC,MAAM,mBAAmBqB,UAAQ,IAEvI,qBAAKnB,UAAU,UAAf,SACI,cAAC,IAAD,CAAQkB,KAAK,SAAb,iC,OClCLS,UATE,WACb,OACI,sBAAK3B,UAAU,sBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD","file":"static/js/5.a9fb503c.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react'\n\nimport './form-input.scss'\n\nconst FormInput = ({ handleChange, label, ...otherProps}) => {\n    return (\n        <div className=\"group\">\n            <input className=\"form-input\" onChange={handleChange} {...otherProps} />\n            { label ? (\n                <label\n                    className={`${otherProps.value.length ? \"shrink\" : \"\" \n                    } form-input-label`}\n                >\n                    {label}\n                </label>\n            ) : null }\n        </div>\n    )\n}\n\nexport default FormInput\n","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\nimport FormInput from \"../formInput/formInput\";\nimport Button from \"../button/button\";\nimport {googleSignInStart, emailSignInStart} from \"../../redux/user/userActions\";\n\nimport './sign-in.scss'\n\nconst SignIn = ({emailSignInStart, googleSignInStart }) =>{\n    const [userCredentials, setCredentials] = useState({ email:'', password:'' })\n    const {email, password } = userCredentials\n\n    const handleSubmit = async event => {\n        event.preventDefault()\n        emailSignInStart(email, password);\n    }\n\n    const handleChange = event => {\n        const { value, name } = event.target\n        setCredentials({...userCredentials,  [name]: value })\n    }\n\n    return (\n        <div className=\"sign-in\">\n            <h2 className=\"title\">I already have an account</h2>\n            <span>Sign in with your email and password</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput name=\"email\" type=\"email\" value={email} handleChange={handleChange} label=\"Email\" required />\n                <FormInput name=\"password\" type=\"password\" value={password} handleChange={handleChange} label=\"Password\" required />\n\n                <div className=\"buttons\">\n                    <Button type=\"submit\">Sign In</Button>\n                    <Button type=\"button\" onClick={googleSignInStart} isGoogleSignIn> {''}Sign in with Google {''}</Button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\n})\nexport default connect(null, mapDispatchToProps)(SignIn)\n","import React, {useState} from 'react'\nimport {connect} from 'react-redux'\nimport FormInput from \"../formInput/formInput\";\nimport Button from \"../button/button\";\n\nimport {SignUpStart} from \"../../redux/user/userActions\";\n\nimport './sign-up.scss'\n\nconst SignUp = ({SignUpStart}) => {\n    const [userCredentials, setUserCredentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    })\n\n    const {displayName, email, password, confirmPassword} = userCredentials\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n\n        if(password !== confirmPassword) {\n            alert('passwords dont match')\n            return;\n        }\n\n        SignUpStart({ displayName, email, password})\n\n    }\n\n    const handleChange = event => {\n        const { name, value } = event.target\n\n        setUserCredentials({...userCredentials, [name]: value})\n    }\n\n    return (\n        <div className=\"sign-up\">\n            <h2 className=\"title\">I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n\n            <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n                <FormInput type=\"text\" name=\"displayName\" value={displayName} handleChange={handleChange} label=\"Display Name\" required />\n                <FormInput type=\"email\" name=\"email\" value={email} handleChange={handleChange} label=\"Email\" required />\n                <FormInput type=\"password\" name=\"password\" value={password} handleChange={handleChange} label=\"Password\" required />\n                <FormInput type=\"password\" name=\"confirmPassword\" value={confirmPassword} handleChange={handleChange} label=\"Confirm Password\" required />\n\n                <div className=\"buttons\">\n                    <Button type=\"submit\">Sign Up</Button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    SignUpStart: userCredentials => dispatch(SignUpStart(userCredentials))\n})\nexport default connect(null, mapDispatchToProps)(SignUp)\n","import React from 'react'\n\nimport SignIn from \"../../components/signIn/signIn\";\nimport SignUp from \"../../components/signUp/signUp\";\nimport './auth.scss'\n\nconst AuthPage = () => {\n    return (\n        <div className=\"sign-in-and-sign-up\">\n            <SignIn/>\n            <SignUp/>\n        </div>\n    )\n}\n\nexport default AuthPage\n"],"sourceRoot":""}